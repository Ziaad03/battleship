(()=>{"use strict";var e={74:(e,t,n)=>{n.d(t,{A:()=>l});var r=n(354),a=n.n(r),o=n(314),i=n.n(o)()(a());i.push([e.id,"body {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#game-menu-container {\n  margin-top: 60px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #f1f1f1;\n  gap: 20px;\n  box-shadow: 20px 20px 5px 10px rgba(0, 0, 0, 0.75);\n}\n\n#grid-container {\n  padding: 10px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: 0.5fr 1.5fr;\n}\n\n#grid-title {\n  font-size: 24px;\n  text-align: center;\n  grid-column-start: 1;\n  grid-column-end: -1;\n  grid-row-start: 1;\n  grid-row-end: 2;\n}\n\n#ships-div {\n  padding: 10px;\n  border: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n","",{version:3,sources:["webpack://./src/style/gameMenu.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,yBAAyB;EACzB,SAAS;EACT,kDAAkD;AACpD;;AAEA;EACE,aAAa;EACb,aAAa;EACb,qCAAqC;EACrC,+BAA+B;AACjC;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,oBAAoB;EACpB,mBAAmB;EACnB,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,aAAa;EACb,sBAAsB;EACtB,QAAQ;AACV",sourcesContent:["body {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#game-menu-container {\n  margin-top: 60px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #f1f1f1;\n  gap: 20px;\n  box-shadow: 20px 20px 5px 10px rgba(0, 0, 0, 0.75);\n}\n\n#grid-container {\n  padding: 10px;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: 0.5fr 1.5fr;\n}\n\n#grid-title {\n  font-size: 24px;\n  text-align: center;\n  grid-column-start: 1;\n  grid-column-end: -1;\n  grid-row-start: 1;\n  grid-row-end: 2;\n}\n\n#ships-div {\n  padding: 10px;\n  border: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n"],sourceRoot:""}]);const l=i},106:(e,t,n)=>{n.d(t,{A:()=>l});var r=n(354),a=n.n(r),o=n(314),i=n.n(o)()(a());i.push([e.id,"/* style.css */\n\n/* Add your CSS styles here */\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #f2f2f2;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\nh1 {\n  color: #333;\n  text-align: center;\n}\n\n.container {\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n/* Add more styles as needed */\n#game-board {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  grid-gap: 10px;\n  justify-items: center;\n  align-items: center;\n}\n\n.player-board {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  gap: 1px;\n}\n\n.cells {\n  border: 1px solid;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 30px;\n  font-weight: bold;\n  background-color: #dad2d2;\n}\n.cells:hover {\n  background-color: #665e5e;\n}\n.ship {\n  background-color: #3e4640; /* Grey for ships */\n}\n\n.hit {\n  background-color: #f00; /* Red for hits */\n}\n\n.miss {\n  background-color: #0f0; /* Green for misses */\n}\n\n.empty {\n  background-color: #dad2d2; /* White for empty cells */\n}\n","",{version:3,sources:["webpack://./src/style/style.css"],names:[],mappings:"AAAA,cAAc;;AAEd,6BAA6B;AAC7B;EACE,8BAA8B;EAC9B,yBAAyB;EACzB,SAAS;EACT,UAAU;EACV,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,cAAc;EACd,aAAa;AACf;;AAEA,8BAA8B;AAC9B;EACE,aAAa;EACb,qCAAqC;EACrC,kCAAkC;EAClC,cAAc;EACd,qBAAqB;EACrB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,QAAQ;AACV;;AAEA;EACE,iBAAiB;EACjB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;EACf,iBAAiB;EACjB,yBAAyB;AAC3B;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,yBAAyB,EAAE,mBAAmB;AAChD;;AAEA;EACE,sBAAsB,EAAE,iBAAiB;AAC3C;;AAEA;EACE,sBAAsB,EAAE,qBAAqB;AAC/C;;AAEA;EACE,yBAAyB,EAAE,0BAA0B;AACvD",sourcesContent:["/* style.css */\n\n/* Add your CSS styles here */\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #f2f2f2;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\nh1 {\n  color: #333;\n  text-align: center;\n}\n\n.container {\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n/* Add more styles as needed */\n#game-board {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  grid-gap: 10px;\n  justify-items: center;\n  align-items: center;\n}\n\n.player-board {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  gap: 1px;\n}\n\n.cells {\n  border: 1px solid;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 30px;\n  font-weight: bold;\n  background-color: #dad2d2;\n}\n.cells:hover {\n  background-color: #665e5e;\n}\n.ship {\n  background-color: #3e4640; /* Grey for ships */\n}\n\n.hit {\n  background-color: #f00; /* Red for hits */\n}\n\n.miss {\n  background-color: #0f0; /* Green for misses */\n}\n\n.empty {\n  background-color: #dad2d2; /* White for empty cells */\n}\n"],sourceRoot:""}]);const l=i},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);r&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),t.push(c))}},t}},354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},i=[],l=0;l<e.length;l++){var s=e[l],d=r.base?s[0]+r.base:s[0],c=o[d]||0,p="".concat(d," ").concat(c);o[d]=c+1;var A=n(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)t[A].references++,t[A].updater(u);else{var m=a(u,r);r.byIndex=l,t.splice(l,0,{identifier:p,updater:m,references:1})}i.push(p)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var l=n(o[i]);t[l].references--}for(var s=r(e,a),d=0;d<o.length;d++){var c=n(o[d]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}o=s}}},659:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&(!e||!/^http(s?):/.test(e));)e=r[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0;const r=class{constructor(){this.board=new Array(10).fill(null).map((()=>new Array(10).fill(null))),this.missedAttacks=[],this.ships=[]}placeShip(e,t,n,r){if(t<0||t>9||n<0||n>9)throw new Error("Invalid row or column");if("vertical"===r){if(t+(e.length-1)>9)return!1;for(let r=0;r<e.length;r++)if(this.board[t+r][n])return!1;for(let r=0;r<e.length;r++)this.board[t+r][n]=e}else{if(n+(e.length-1)>9)return!1;for(let r=0;r<e.length;r++)if(this.board[t][n+r])return!1;for(let r=0;r<e.length;r++)this.board[t][n+r]=e}return this.ships.push(e),!0}receiveAttack(e,t){if(e<0||e>9||t<0||t>9)throw new Error("Invalid row or column");return null===this.board[e][t]?(this.missedAttacks.push([e,t]),this.board[e][t]="miss",!0):"hit"!==this.board[e][t]&&("miss"!==this.board[e][t]&&(this.board[e][t].hit(),this.board[e][t]="hit",!0))}allShipsSunk(){return this.ships.every((e=>e.isSunk()))}},a=class{constructor(e){this.name=e,this.gameBoard=new r}fireShot(e,t,n){return n.receiveAttack(e,t)}playerPlaceShip(e,t,n,r){this.gameBoard.placeShip(e,t,n,r)}getBoard(){return this.gameBoard.board}},o=class{constructor(e){this.length=e,this.hits=0}hit(){this.isSunk()||this.hits++}isSunk(){return this.hits===this.length}};var i=n(72),l=n.n(i),s=n(825),d=n.n(s),c=n(659),p=n.n(c),A=n(56),u=n.n(A),m=n(540),h=n.n(m),f=n(113),g=n.n(f),y=n(106),C={};function E(e){const t=document.getElementById("player-1-board");t.innerHTML="";let n=e.getBoard();for(let e=0;e<10;e++)for(let r=0;r<10;r++){const a=document.createElement("div");a.dataset.row=e,a.dataset.col=r,n[e][r]instanceof o?a.className="ship":"hit"===n[e][r]?a.className="hit":"miss"===n[e][r]?a.className="miss":a.className="empty",a.classList.add("cells"),a.classList.add("player-1-cells"),t.appendChild(a)}}function B(e){const t=document.getElementById("player-2-board");t.innerHTML="";let n=e.getBoard();for(let e=0;e<10;e++)for(let r=0;r<10;r++){const a=document.createElement("div");a.dataset.row=e,a.dataset.col=r,n[e][r]instanceof o||("hit"===n[e][r]?a.className="hit":"miss"===n[e][r]?a.className="miss":a.className="empty"),a.classList.add("cells"),a.classList.add("player-2-cells"),t.appendChild(a)}}C.styleTagTransform=g(),C.setAttributes=u(),C.insert=p().bind(null,"head"),C.domAPI=d(),C.insertStyleElement=h(),l()(y.A,C),y.A&&y.A.locals&&y.A.locals;const b=new a("Player 1"),x=new a("Player 2");function v(e,t,n,r){let a=e.fireShot(n,r,t);return E(b),B(x),a}const w=function(e){(function(){document.body.innerHTML="";let e=document.createElement("h1");e.textContent="Battleship",document.body.appendChild(e);let t=document.createElement("div");t.id="game-board",document.body.appendChild(t);let n=document.createElement("div");n.classList.add("player-board");let r=document.createElement("div");r.classList.add("player-board"),t.appendChild(n),t.appendChild(r);let a=document.createElement("h2");a.textContent="Player 1's Board";let o=document.createElement("h2");o.textContent="Player 2's Board",n.appendChild(a),r.appendChild(o);let i=document.createElement("div");i.id="player-1-board",i.classList.add("board"),n.appendChild(i);let l=document.createElement("div");l.id="player-2-board",l.classList.add("board"),r.appendChild(l)})(),console.log("Game started"),function(e){let t=e[0],n=e[1],r=e[2],a=e[3],i=e[4],l=t.width,s=n.width,d=r.width,c=a.width,p=i.width,A=new o(l),u=new o(s),m=new o(d),h=new o(c),f=new o(p),g=Number(t.row),y=Number(t.col),C=Number(n.row),v=Number(n.col),w=Number(r.row),S=Number(r.col),k=Number(a.row),M=Number(a.col),j=Number(i.row),T=Number(i.col);function I(){return Math.random()<.5?"horizontal":"vertical"}b.playerPlaceShip(A,g,y,"horizontal"),b.playerPlaceShip(u,C,v,"horizontal"),b.playerPlaceShip(m,w,S,"horizontal"),b.playerPlaceShip(h,k,M,"horizontal"),b.playerPlaceShip(f,j,T,"horizontal"),x.playerPlaceShip(A,Math.floor(10*Math.random()),Math.floor(10*Math.random()),I()),x.playerPlaceShip(u,Math.floor(10*Math.random()),Math.floor(10*Math.random()),I()),x.playerPlaceShip(m,Math.floor(10*Math.random()),Math.floor(10*Math.random()),I()),x.playerPlaceShip(h,Math.floor(10*Math.random()),Math.floor(10*Math.random()),I()),x.playerPlaceShip(f,Math.floor(10*Math.random()),Math.floor(10*Math.random()),I()),E(b),B(x)}(e);let t=!0,n=!1;document.getElementById("player-1-board");const r=document.getElementById("player-2-board");function a(){if(!t){let e=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),a=v(x,b.gameBoard,e,r);for(;!1===a;)e=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),a=v(x,b.gameBoard,e,r);b.gameBoard.allShipsSunk()?(n=!0,console.log("Computer wins!")):t=!0}}r?r.addEventListener("click",(function(e){if(t&&!n){let r=parseInt(e.target.dataset.row),o=parseInt(e.target.dataset.col);if(!1===v(b,x.gameBoard,r,o))return void console.log("Invalid move! Try again.");x.gameBoard.allShipsSunk()?(n=!0,console.log("Player 1 wins!")):(t=!1,setTimeout(a,500))}})):console.error("Player 2 board not found")};var S=n(74),k={};k.styleTagTransform=g(),k.setAttributes=u(),k.insert=p().bind(null,"head"),k.domAPI=d(),k.insertStyleElement=h(),l()(S.A,k),S.A&&S.A.locals&&S.A.locals;const M=n.p+"170b0ea304392cf808d8.jpeg",j=n.p+"9542f0e11e2ded12c563.png";!function(){let e=document.createElement("img");e.src=M,e.style.width="100%",e.style.height="100vh",e.style.position="fixed",e.style.top="0",e.style.left="0",e.style.zIndex="-1",document.body.appendChild(e);let t=document.createElement("button");t.textContent="Start Game",t.addEventListener("click",(()=>{let e=function(e){let t=document.getElementById("grid").childNodes,n=[];return t.forEach((e=>{if(e.childElementCount>0){let t=e.children[0],r=parseInt(t.id.split("-")[1])+1,a={row:e.dataset.row,col:e.dataset.col,width:r};n.push(a)}})),n}();console.log(e),document.body.innerHTML="",w(e),t.parentNode.removeChild(t)})),document.body.appendChild(t);let n=document.createElement("div");n.id="game-menu-container",n.style.display="flex",n.style.justifyContent="center",n.style.alignItems="center";let r=document.createElement("div"),a=document.createElement("h1");a.textContent="Welcome to Battleship!",a.style.fontSize="32px",a.style.fontWeight="bold",r.style.width="90%",r.style.display="flex",r.style.justifyContent="center",r.style.alignItems="center",r.style.borderTop="3px solid black",r.style.borderBottom="3px solid black",r.style.display="flex",r.style.justifyContent="center",r.style.alignItems="center";let o=document.createElement("div");o.style.display="flex",o.style.alignItems="center";let i=document.createElement("img");i.src=j,i.style.width="40px",i.style.height="40px";let l=document.createElement("img");l.src=j,l.style.width="40px",l.style.height="40px",o.appendChild(i),r.appendChild(i),r.appendChild(a),r.appendChild(l),n.appendChild(r);let s=document.createElement("div");s.id="grid-container",s.style.width="800px",s.style.height="500px",s.style.padding="20px";let d=document.createElement("div");d.style.fontSize="24px",d.style.fontWeight="bold",d.id="grid-title",d.textContent="Place your ships",s.appendChild(d);let c=document.createElement("div");c.id="grid",c.style.display="grid",c.style.gridTemplateColumns="repeat(10, 1fr)",c.style.gridTemplateRows="repeat(10, 1fr)",c.style.border="1px solid black",c.style.width="400px",c.style.height="400px";for(let e=0;e<100;e++){let t=document.createElement("div");t.style.border="1px solid black",t.style.width="38px",t.style.height="38px",t.dataset.row=Math.floor(e/10),t.dataset.col=e%10,t.addEventListener("dragover",(e=>{e.preventDefault()})),t.addEventListener("drop",(e=>{e.preventDefault();let t=e.dataTransfer.getData("text/plain"),n=document.getElementById(t);e.target.appendChild(n)})),c.appendChild(t)}s.appendChild(c);let p=document.createElement("div");p.id="ships-div",p.style.marginLeft="20px";for(let e=0;e<5;e++){let t=document.createElement("div");t.classList.add("drag-ship"),t.id=`ship-${e}`,t.style.width=40*(e+1)+"px",t.style.height="40px",t.style.backgroundColor="gray",t.style.marginBottom="10px",t.draggable=!0,t.addEventListener("dragstart",(e=>{e.dataTransfer.setData("text/plain",t.id)})),p.appendChild(t)}s.appendChild(p),n.appendChild(s),n.appendChild(t),document.body.appendChild(n)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWtCLE9BQzdCcEksRUFBS3hFLE1BQU02TSxhQUFlLE9BRTFCckksRUFBS3NJLFdBQVksRUFFakJ0SSxFQUFLbUYsaUJBQWlCLGFBQWNsSixJQUNsQ0EsRUFBRStMLGFBQWFPLFFBQVEsYUFBY3ZJLEVBQUt4SSxHQUFHLElBRS9DMFEsRUFBUzlMLFlBQVk0RCxFQUN2QixDQUdBd0gsRUFBY3BMLFlBQVk4TCxHQUcxQnZCLEVBQUl2SyxZQUFZb0wsR0FHaEJiLEVBQUl2SyxZQUFZMEosR0FHaEJuSyxTQUFTc0csS0FBSzdGLFlBQVl1SyxFQUM1QixDQzdLQSxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZS9nYW1lTWVudS5jc3MiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZS9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2NsYXNzZXMvZ2FtZWJvYXJkLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvY2xhc3Nlcy9wbGF5ZXIuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9jbGFzc2VzL3NoaXAuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZS9zdHlsZS5jc3M/YzlmMCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3V0aWxzL2RvbU1hbmdlci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2dhbWVNb2R1bGUuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZS9nYW1lTWVudS5jc3M/MzAwZCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2dhbWVNZW51LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGJvZHkge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuI2dhbWUtbWVudS1jb250YWluZXIge1xuICBtYXJnaW4tdG9wOiA2MHB4O1xuICBwYWRkaW5nOiAyMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxO1xuICBnYXA6IDIwcHg7XG4gIGJveC1zaGFkb3c6IDIwcHggMjBweCA1cHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNzUpO1xufVxuXG4jZ3JpZC1jb250YWluZXIge1xuICBwYWRkaW5nOiAxMHB4O1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IDAuNWZyIDEuNWZyO1xufVxuXG4jZ3JpZC10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBncmlkLWNvbHVtbi1zdGFydDogMTtcbiAgZ3JpZC1jb2x1bW4tZW5kOiAtMTtcbiAgZ3JpZC1yb3ctc3RhcnQ6IDE7XG4gIGdyaWQtcm93LWVuZDogMjtcbn1cblxuI3NoaXBzLWRpdiB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDVweDtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlL2dhbWVNZW51LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQix5QkFBeUI7RUFDekIsU0FBUztFQUNULGtEQUFrRDtBQUNwRDs7QUFFQTtFQUNFLGFBQWE7RUFDYixhQUFhO0VBQ2IscUNBQXFDO0VBQ3JDLCtCQUErQjtBQUNqQzs7QUFFQTtFQUNFLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsb0JBQW9CO0VBQ3BCLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixRQUFRO0FBQ1ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiYm9keSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4jZ2FtZS1tZW51LWNvbnRhaW5lciB7XFxuICBtYXJnaW4tdG9wOiA2MHB4O1xcbiAgcGFkZGluZzogMjBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XFxuICBnYXA6IDIwcHg7XFxuICBib3gtc2hhZG93OiAyMHB4IDIwcHggNXB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjc1KTtcXG59XFxuXFxuI2dyaWQtY29udGFpbmVyIHtcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogMC41ZnIgMS41ZnI7XFxufVxcblxcbiNncmlkLXRpdGxlIHtcXG4gIGZvbnQtc2l6ZTogMjRweDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGdyaWQtY29sdW1uLXN0YXJ0OiAxO1xcbiAgZ3JpZC1jb2x1bW4tZW5kOiAtMTtcXG4gIGdyaWQtcm93LXN0YXJ0OiAxO1xcbiAgZ3JpZC1yb3ctZW5kOiAyO1xcbn1cXG5cXG4jc2hpcHMtZGl2IHtcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgZ2FwOiA1cHg7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLyogc3R5bGUuY3NzICovXG5cbi8qIEFkZCB5b3VyIENTUyBzdHlsZXMgaGVyZSAqL1xuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuaDEge1xuICBjb2xvcjogIzMzMztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA5NjBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDIwcHg7XG59XG5cbi8qIEFkZCBtb3JlIHN0eWxlcyBhcyBuZWVkZWQgKi9cbiNnYW1lLWJvYXJkIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMiwgMWZyKTtcbiAgZ3JpZC1nYXA6IDEwcHg7XG4gIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLnBsYXllci1ib2FyZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uYm9hcmQge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcbiAgZ2FwOiAxcHg7XG59XG5cbi5jZWxscyB7XG4gIGJvcmRlcjogMXB4IHNvbGlkO1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZm9udC1zaXplOiAzMHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RhZDJkMjtcbn1cbi5jZWxsczpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM2NjVlNWU7XG59XG4uc2hpcCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzZTQ2NDA7IC8qIEdyZXkgZm9yIHNoaXBzICovXG59XG5cbi5oaXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjAwOyAvKiBSZWQgZm9yIGhpdHMgKi9cbn1cblxuLm1pc3Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGYwOyAvKiBHcmVlbiBmb3IgbWlzc2VzICovXG59XG5cbi5lbXB0eSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkYWQyZDI7IC8qIFdoaXRlIGZvciBlbXB0eSBjZWxscyAqL1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLGNBQWM7O0FBRWQsNkJBQTZCO0FBQzdCO0VBQ0UsOEJBQThCO0VBQzlCLHlCQUF5QjtFQUN6QixTQUFTO0VBQ1QsVUFBVTtFQUNWLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLGFBQWE7QUFDZjs7QUFFQSw4QkFBOEI7QUFDOUI7RUFDRSxhQUFhO0VBQ2IscUNBQXFDO0VBQ3JDLGtDQUFrQztFQUNsQyxjQUFjO0VBQ2QscUJBQXFCO0VBQ3JCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQ0FBc0M7RUFDdEMsUUFBUTtBQUNWOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQix5QkFBeUI7QUFDM0I7QUFDQTtFQUNFLHlCQUF5QjtBQUMzQjtBQUNBO0VBQ0UseUJBQXlCLEVBQUUsbUJBQW1CO0FBQ2hEOztBQUVBO0VBQ0Usc0JBQXNCLEVBQUUsaUJBQWlCO0FBQzNDOztBQUVBO0VBQ0Usc0JBQXNCLEVBQUUscUJBQXFCO0FBQy9DOztBQUVBO0VBQ0UseUJBQXlCLEVBQUUsMEJBQTBCO0FBQ3ZEXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qIHN0eWxlLmNzcyAqL1xcblxcbi8qIEFkZCB5b3VyIENTUyBzdHlsZXMgaGVyZSAqL1xcbmJvZHkge1xcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuaDEge1xcbiAgY29sb3I6ICMzMzM7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5jb250YWluZXIge1xcbiAgbWF4LXdpZHRoOiA5NjBweDtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbiAgcGFkZGluZzogMjBweDtcXG59XFxuXFxuLyogQWRkIG1vcmUgc3R5bGVzIGFzIG5lZWRlZCAqL1xcbiNnYW1lLWJvYXJkIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMiwgMWZyKTtcXG4gIGdyaWQtZ2FwOiAxMHB4O1xcbiAganVzdGlmeS1pdGVtczogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLnBsYXllci1ib2FyZCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmJvYXJkIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcXG4gIGdhcDogMXB4O1xcbn1cXG5cXG4uY2VsbHMge1xcbiAgYm9yZGVyOiAxcHggc29saWQ7XFxuICB3aWR0aDogNTBweDtcXG4gIGhlaWdodDogNTBweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBmb250LXNpemU6IDMwcHg7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNkYWQyZDI7XFxufVxcbi5jZWxsczpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjY1ZTVlO1xcbn1cXG4uc2hpcCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2U0NjQwOyAvKiBHcmV5IGZvciBzaGlwcyAqL1xcbn1cXG5cXG4uaGl0IHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMDA7IC8qIFJlZCBmb3IgaGl0cyAqL1xcbn1cXG5cXG4ubWlzcyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGYwOyAvKiBHcmVlbiBmb3IgbWlzc2VzICovXFxufVxcblxcbi5lbXB0eSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGFkMmQyOyAvKiBXaGl0ZSBmb3IgZW1wdHkgY2VsbHMgKi9cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSB7XG5cdFx0XHR2YXIgaSA9IHNjcmlwdHMubGVuZ3RoIC0gMTtcblx0XHRcdHdoaWxlIChpID4gLTEgJiYgKCFzY3JpcHRVcmwgfHwgIS9eaHR0cChzPyk6Ly50ZXN0KHNjcmlwdFVybCkpKSBzY3JpcHRVcmwgPSBzY3JpcHRzW2ktLV0uc3JjO1xuXHRcdH1cblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJleHBvcnQgY2xhc3MgR2FtZUJvYXJkIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgLy8gMkQgMTB4MTAgYXJyYXksIGluaXRpYWxpemluZyB3aXRoIG51bGwgdG8gcmVwcmVzZW50IGVtcHR5IHNwb3RzXG4gICAgdGhpcy5ib2FyZCA9IG5ldyBBcnJheSgxMCkuZmlsbChudWxsKS5tYXAoKCkgPT4gbmV3IEFycmF5KDEwKS5maWxsKG51bGwpKTtcbiAgICB0aGlzLm1pc3NlZEF0dGFja3MgPSBbXTtcbiAgICB0aGlzLnNoaXBzID0gW107XG4gIH1cblxuICBwbGFjZVNoaXAoc2hpcCwgcm93LCBjb2wsIG9yaWVudGF0aW9uKSB7XG4gICAgLy8gdGhyb3cgYW4gZXJyb3IgaWYgcm93IG9yIGNvbHVtbiBhcmUgbm90IHZhbGlkXG4gICAgaWYgKHJvdyA8IDAgfHwgcm93ID4gOSB8fCBjb2wgPCAwIHx8IGNvbCA+IDkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcm93IG9yIGNvbHVtblwiKTtcbiAgICB9XG5cbiAgICAvLyB2YWxpZGF0ZSB0aGlzIHBsYWNlIGFjY29yZGluZyB0byBvcmllbnRhdGlvblxuICAgIGlmIChvcmllbnRhdGlvbiA9PT0gXCJ2ZXJ0aWNhbFwiKSB7XG4gICAgICAvLyBjaGVjayBpZiB0aGVyZSBpcyBlbm91Z2ggc3BhY2UgZm9yIHRoZSBzaGlwIHZlcnRpY2FsbHlcbiAgICAgIGlmIChyb3cgKyAoc2hpcC5sZW5ndGggLSAxKSA+IDkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICAvLyBjaGVjayBpZiB0aGVyZSBpcyBhbnkgc2hpcCBhbHJlYWR5IHRoZXJlXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNoaXAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHRoaXMuYm9hcmRbcm93ICsgaV1bY29sXSkge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBwbGFjZSB0aGUgc2hpcCBvbiBib2FyZFxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGlwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRoaXMuYm9hcmRbcm93ICsgaV1bY29sXSA9IHNoaXA7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGNoZWNrIGlmIHRoZXJlIGlzIGVub3VnaCBzcGFjZSBmb3IgdGhlIHNoaXAgaG9yaXpvbnRhbGx5XG4gICAgICBpZiAoY29sICsgKHNoaXAubGVuZ3RoIC0gMSkgPiA5KSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gY2hlY2sgaWYgdGhlcmUgaXMgYW55IHNoaXAgYWxyZWFkeSB0aGVyZVxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGlwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLmJvYXJkW3Jvd11bY29sICsgaV0pIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gcGxhY2UgdGhlIHNoaXAgb24gYm9hcmRcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2hpcC5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLmJvYXJkW3Jvd11bY29sICsgaV0gPSBzaGlwO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuc2hpcHMucHVzaChzaGlwKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJlY2VpdmVBdHRhY2socm93LCBjb2wpIHtcbiAgICAvLyB0aHJvdyBhbiBlcnJvciBpZiByb3cgb3IgY29sdW1uIGFyZSBub3QgdmFsaWRcbiAgICBpZiAocm93IDwgMCB8fCByb3cgPiA5IHx8IGNvbCA8IDAgfHwgY29sID4gOSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCByb3cgb3IgY29sdW1uXCIpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmJvYXJkW3Jvd11bY29sXSA9PT0gbnVsbCkge1xuICAgICAgdGhpcy5taXNzZWRBdHRhY2tzLnB1c2goW3JvdywgY29sXSk7XG4gICAgICB0aGlzLmJvYXJkW3Jvd11bY29sXSA9IFwibWlzc1wiO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBlbHNlIGlmICh0aGlzLmJvYXJkW3Jvd11bY29sXSA9PT0gXCJoaXRcIikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSBpZiAodGhpcy5ib2FyZFtyb3ddW2NvbF0gPT09IFwibWlzc1wiKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHNoaXAgPSB0aGlzLmJvYXJkW3Jvd11bY29sXTtcbiAgICAgIHNoaXAuaGl0KCk7XG4gICAgICB0aGlzLmJvYXJkW3Jvd11bY29sXSA9IFwiaGl0XCI7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBhbGxTaGlwc1N1bmsoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2hpcHMuZXZlcnkoKHNoaXApID0+IHNoaXAuaXNTdW5rKCkpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEdhbWVCb2FyZDtcbiIsImltcG9ydCBHYW1lQm9hcmQgZnJvbSBcIi4vZ2FtZWJvYXJkXCI7XG5cbi8vIERlZmluZSB0aGUgUGxheWVyIGNsYXNzIHRvIGhhbmRsZSBwbGF5ZXIgYWN0aW9ucyBhbmQgZ2FtZSBsb2dpY1xuXG5leHBvcnQgY2xhc3MgUGxheWVyIHtcbiAgY29uc3RydWN0b3IobmFtZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5nYW1lQm9hcmQgPSBuZXcgR2FtZUJvYXJkKCk7XG4gIH1cblxuICAvLyBNZXRob2QgdG8gZmlyZSBhIHNob3Qgb24gdGhlIGVuZW15IGdhbWUgYm9hcmRcbiAgZmlyZVNob3Qocm93LCBjb2wsIGVuZW15R2FtZUJvYXJkKSB7XG4gICAgcmV0dXJuIGVuZW15R2FtZUJvYXJkLnJlY2VpdmVBdHRhY2socm93LCBjb2wpO1xuICB9XG4gIC8vIE1ldGhvZCB0byBwbGFjZSBhIHNoaXAgb24gdGhlIHBsYXllcidzIGdhbWUgYm9hcmRcbiAgcGxheWVyUGxhY2VTaGlwKHNoaXAsIHJvdywgY29sLCBvcmllbnRhdGlvbikge1xuICAgIHRoaXMuZ2FtZUJvYXJkLnBsYWNlU2hpcChzaGlwLCByb3csIGNvbCwgb3JpZW50YXRpb24pO1xuICB9XG5cbiAgZ2V0Qm9hcmQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2FtZUJvYXJkLmJvYXJkO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBsYXllcjtcbiIsImV4cG9ydCBjbGFzcyBTaGlwIHtcbiAgY29uc3RydWN0b3IobGVuZ3RoKSB7XG4gICAgdGhpcy5sZW5ndGggPSBsZW5ndGg7XG4gICAgdGhpcy5oaXRzID0gMDtcbiAgfVxuXG4gIGhpdCgpIHtcbiAgICBpZiAodGhpcy5pc1N1bmsoKSkgcmV0dXJuO1xuICAgIHRoaXMuaGl0cysrO1xuICB9XG5cbiAgaXNTdW5rKCkge1xuICAgIHJldHVybiB0aGlzLmhpdHMgPT09IHRoaXMubGVuZ3RoO1xuICB9XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgU2hpcDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcbm9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgU2hpcCBmcm9tIFwiLi4vY2xhc3Nlcy9zaGlwXCI7XG5pbXBvcnQgXCIuLi9zdHlsZS9zdHlsZS5jc3NcIjtcbmV4cG9ydCBmdW5jdGlvbiBkaXNwbGF5R2FtZSgpIHtcbiAgZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgPSBcIlwiO1xuICBsZXQgVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDFcIik7XG4gIFRpdGxlLnRleHRDb250ZW50ID0gXCJCYXR0bGVzaGlwXCI7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoVGl0bGUpO1xuICBsZXQgZ2FtZUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGdhbWVDb250YWluZXIuaWQgPSBcImdhbWUtYm9hcmRcIjtcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChnYW1lQ29udGFpbmVyKTtcbiAgbGV0IHBsYXllckJvYXJkMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHBsYXllckJvYXJkMS5jbGFzc0xpc3QuYWRkKFwicGxheWVyLWJvYXJkXCIpO1xuICBsZXQgcGxheWVyQm9hcmQyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgcGxheWVyQm9hcmQyLmNsYXNzTGlzdC5hZGQoXCJwbGF5ZXItYm9hcmRcIik7XG5cbiAgZ2FtZUNvbnRhaW5lci5hcHBlbmRDaGlsZChwbGF5ZXJCb2FyZDEpO1xuICBnYW1lQ29udGFpbmVyLmFwcGVuZENoaWxkKHBsYXllckJvYXJkMik7XG5cbiAgbGV0IHBsYXllcjFUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMlwiKTtcbiAgcGxheWVyMVRpdGxlLnRleHRDb250ZW50ID0gXCJQbGF5ZXIgMSdzIEJvYXJkXCI7XG4gIGxldCBwbGF5ZXIyVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDJcIik7XG4gIHBsYXllcjJUaXRsZS50ZXh0Q29udGVudCA9IFwiUGxheWVyIDIncyBCb2FyZFwiO1xuICBwbGF5ZXJCb2FyZDEuYXBwZW5kQ2hpbGQocGxheWVyMVRpdGxlKTtcbiAgcGxheWVyQm9hcmQyLmFwcGVuZENoaWxkKHBsYXllcjJUaXRsZSk7XG5cbiAgbGV0IHBsYXllcjFCb2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHBsYXllcjFCb2FyZC5pZCA9IFwicGxheWVyLTEtYm9hcmRcIjtcbiAgcGxheWVyMUJvYXJkLmNsYXNzTGlzdC5hZGQoXCJib2FyZFwiKTtcbiAgcGxheWVyQm9hcmQxLmFwcGVuZENoaWxkKHBsYXllcjFCb2FyZCk7XG4gIGxldCBwbGF5ZXIyQm9hcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBwbGF5ZXIyQm9hcmQuaWQgPSBcInBsYXllci0yLWJvYXJkXCI7XG4gIHBsYXllcjJCb2FyZC5jbGFzc0xpc3QuYWRkKFwiYm9hcmRcIik7XG4gIHBsYXllckJvYXJkMi5hcHBlbmRDaGlsZChwbGF5ZXIyQm9hcmQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyUGxheWVyMUdhbWVCb2FyZChwbGF5ZXIpIHtcbiAgLy8gR2V0IHRoZSBnYW1lIGJvYXJkIGVsZW1lbnQgZnJvbSB0aGUgSFRNTFxuICBjb25zdCBnYW1lQm9hcmRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwbGF5ZXItMS1ib2FyZFwiKTtcblxuICAvLyBDbGVhciB0aGUgZXhpc3RpbmcgY29udGVudCBvZiB0aGUgZ2FtZSBib2FyZFxuICBnYW1lQm9hcmRFbGVtZW50LmlubmVySFRNTCA9IFwiXCI7XG5cbiAgbGV0IGdhbWVCb2FyZCA9IHBsYXllci5nZXRCb2FyZCgpO1xuXG4gIC8vIExvb3AgdGhyb3VnaCBlYWNoIHJvdyBhbmQgY29sdW1uIG9mIHRoZSBwbGF5ZXIncyBnYW1lIGJvYXJkXG4gIGZvciAobGV0IHJvdyA9IDA7IHJvdyA8IDEwOyByb3crKykge1xuICAgIGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IDEwOyBjb2wrKykge1xuICAgICAgLy8gQ3JlYXRlIGEgbmV3IGNlbGwgZWxlbWVudCBmb3IgZWFjaCBwb3NpdGlvbiBvbiB0aGUgZ2FtZSBib2FyZFxuICAgICAgY29uc3QgY2VsbEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gICAgICBjZWxsRWxlbWVudC5kYXRhc2V0LnJvdyA9IHJvdztcbiAgICAgIGNlbGxFbGVtZW50LmRhdGFzZXQuY29sID0gY29sO1xuXG4gICAgICBpZiAoZ2FtZUJvYXJkW3Jvd11bY29sXSBpbnN0YW5jZW9mIFNoaXApIHtcbiAgICAgICAgY2VsbEVsZW1lbnQuY2xhc3NOYW1lID0gXCJzaGlwXCI7XG4gICAgICB9IGVsc2UgaWYgKGdhbWVCb2FyZFtyb3ddW2NvbF0gPT09IFwiaGl0XCIpIHtcbiAgICAgICAgY2VsbEVsZW1lbnQuY2xhc3NOYW1lID0gXCJoaXRcIjtcbiAgICAgIH0gZWxzZSBpZiAoZ2FtZUJvYXJkW3Jvd11bY29sXSA9PT0gXCJtaXNzXCIpIHtcbiAgICAgICAgY2VsbEVsZW1lbnQuY2xhc3NOYW1lID0gXCJtaXNzXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjZWxsRWxlbWVudC5jbGFzc05hbWUgPSBcImVtcHR5XCI7XG4gICAgICB9XG4gICAgICBjZWxsRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiY2VsbHNcIik7XG4gICAgICBjZWxsRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwicGxheWVyLTEtY2VsbHNcIik7XG4gICAgICAvLyBBcHBlbmQgdGhlIGNlbGwgZWxlbWVudCB0byB0aGUgZ2FtZSBib2FyZCBlbGVtZW50XG4gICAgICBnYW1lQm9hcmRFbGVtZW50LmFwcGVuZENoaWxkKGNlbGxFbGVtZW50KTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlclBsYXllcjJHYW1lQm9hcmQocGxheWVyKSB7XG4gIC8vIEdldCB0aGUgZ2FtZSBib2FyZCBlbGVtZW50IGZyb20gdGhlIEhUTUxcbiAgY29uc3QgZ2FtZUJvYXJkRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGxheWVyLTItYm9hcmRcIik7XG5cbiAgLy8gQ2xlYXIgdGhlIGV4aXN0aW5nIGNvbnRlbnQgb2YgdGhlIGdhbWUgYm9hcmRcbiAgZ2FtZUJvYXJkRWxlbWVudC5pbm5lckhUTUwgPSBcIlwiO1xuICBsZXQgZ2FtZUJvYXJkID0gcGxheWVyLmdldEJvYXJkKCk7XG5cbiAgLy8gTG9vcCB0aHJvdWdoIGVhY2ggcm93IGFuZCBjb2x1bW4gb2YgdGhlIHBsYXllcidzIGdhbWUgYm9hcmRcbiAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgMTA7IHJvdysrKSB7XG4gICAgZm9yIChsZXQgY29sID0gMDsgY29sIDwgMTA7IGNvbCsrKSB7XG4gICAgICAvLyBDcmVhdGUgYSBuZXcgY2VsbCBlbGVtZW50IGZvciBlYWNoIHBvc2l0aW9uIG9uIHRoZSBnYW1lIGJvYXJkXG4gICAgICBjb25zdCBjZWxsRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICBjZWxsRWxlbWVudC5kYXRhc2V0LnJvdyA9IHJvdztcbiAgICAgIGNlbGxFbGVtZW50LmRhdGFzZXQuY29sID0gY29sO1xuXG4gICAgICAvLyBTZXQgdGhlIGNsYXNzIG9mIHRoZSBjZWxsIGVsZW1lbnQgYmFzZWQgb24gdGhlIHZhbHVlIGluIHRoZSBnYW1lIGJvYXJkXG4gICAgICBpZiAoZ2FtZUJvYXJkW3Jvd11bY29sXSBpbnN0YW5jZW9mIFNoaXApIHtcbiAgICAgIH0gZWxzZSBpZiAoZ2FtZUJvYXJkW3Jvd11bY29sXSA9PT0gXCJoaXRcIikge1xuICAgICAgICBjZWxsRWxlbWVudC5jbGFzc05hbWUgPSBcImhpdFwiO1xuICAgICAgfSBlbHNlIGlmIChnYW1lQm9hcmRbcm93XVtjb2xdID09PSBcIm1pc3NcIikge1xuICAgICAgICBjZWxsRWxlbWVudC5jbGFzc05hbWUgPSBcIm1pc3NcIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNlbGxFbGVtZW50LmNsYXNzTmFtZSA9IFwiZW1wdHlcIjtcbiAgICAgIH1cbiAgICAgIGNlbGxFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJjZWxsc1wiKTtcbiAgICAgIGNlbGxFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJwbGF5ZXItMi1jZWxsc1wiKTtcbiAgICAgIC8vIEFwcGVuZCB0aGUgY2VsbCBlbGVtZW50IHRvIHRoZSBnYW1lIGJvYXJkIGVsZW1lbnRcbiAgICAgIGdhbWVCb2FyZEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2VsbEVsZW1lbnQpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB7IHJlbmRlclBsYXllcjFHYW1lQm9hcmQsIHJlbmRlclBsYXllcjJHYW1lQm9hcmQsIGRpc3BsYXlHYW1lIH07XG4iLCJpbXBvcnQgUGxheWVyIGZyb20gXCIuL2NsYXNzZXMvcGxheWVyXCI7XG5pbXBvcnQgU2hpcCBmcm9tIFwiLi9jbGFzc2VzL3NoaXBcIjtcbmltcG9ydCB7XG4gIHJlbmRlclBsYXllcjFHYW1lQm9hcmQsXG4gIHJlbmRlclBsYXllcjJHYW1lQm9hcmQsXG4gIGRpc3BsYXlHYW1lLFxufSBmcm9tIFwiLi91dGlscy9kb21NYW5nZXJcIjtcblxuLy8gY3JlYXRlIHBsYXllcnNcbmNvbnN0IHBsYXllcjEgPSBuZXcgUGxheWVyKFwiUGxheWVyIDFcIik7XG5jb25zdCBwbGF5ZXIyID0gbmV3IFBsYXllcihcIlBsYXllciAyXCIpO1xuLy8gQ3JlYXRlIGdhbWVib2FyZFxuZnVuY3Rpb24gaW5pdChzaGlwc0RhdGEpIHtcbiAgLy8gQ3JlYXRlIHNoaXBzXG4gIGxldCBzaGlwMURhdGEgPSBzaGlwc0RhdGFbMF07XG4gIGxldCBzaGlwMkRhdGEgPSBzaGlwc0RhdGFbMV07XG4gIGxldCBzaGlwM0RhdGEgPSBzaGlwc0RhdGFbMl07XG4gIGxldCBzaGlwNERhdGEgPSBzaGlwc0RhdGFbM107XG4gIGxldCBzaGlwNURhdGEgPSBzaGlwc0RhdGFbNF07XG5cbiAgbGV0IHNoaXAxV2lkdGggPSBzaGlwMURhdGEud2lkdGg7XG4gIGxldCBzaGlwMldpZHRoID0gc2hpcDJEYXRhLndpZHRoO1xuICBsZXQgc2hpcDNXaWR0aCA9IHNoaXAzRGF0YS53aWR0aDtcbiAgbGV0IHNoaXA0V2lkdGggPSBzaGlwNERhdGEud2lkdGg7XG4gIGxldCBzaGlwNVdpZHRoID0gc2hpcDVEYXRhLndpZHRoO1xuXG4gIGxldCBzaGlwMSA9IG5ldyBTaGlwKHNoaXAxV2lkdGgpO1xuICBsZXQgc2hpcDIgPSBuZXcgU2hpcChzaGlwMldpZHRoKTtcbiAgbGV0IHNoaXAzID0gbmV3IFNoaXAoc2hpcDNXaWR0aCk7XG4gIGxldCBzaGlwNCA9IG5ldyBTaGlwKHNoaXA0V2lkdGgpO1xuICBsZXQgc2hpcDUgPSBuZXcgU2hpcChzaGlwNVdpZHRoKTtcblxuICAvLyBBZGQgc2hpcHMgdG8gcGxheWVyIDEgZ2FtZWJvYXJkXG4gIGxldCBzaGlwMVJvdyA9IE51bWJlcihzaGlwMURhdGEucm93KTtcbiAgbGV0IHNoaXAxQ29sID0gTnVtYmVyKHNoaXAxRGF0YS5jb2wpO1xuICBsZXQgc2hpcDJSb3cgPSBOdW1iZXIoc2hpcDJEYXRhLnJvdyk7XG4gIGxldCBzaGlwMkNvbCA9IE51bWJlcihzaGlwMkRhdGEuY29sKTtcbiAgbGV0IHNoaXAzUm93ID0gTnVtYmVyKHNoaXAzRGF0YS5yb3cpO1xuICBsZXQgc2hpcDNDb2wgPSBOdW1iZXIoc2hpcDNEYXRhLmNvbCk7XG4gIGxldCBzaGlwNFJvdyA9IE51bWJlcihzaGlwNERhdGEucm93KTtcbiAgbGV0IHNoaXA0Q29sID0gTnVtYmVyKHNoaXA0RGF0YS5jb2wpO1xuICBsZXQgc2hpcDVSb3cgPSBOdW1iZXIoc2hpcDVEYXRhLnJvdyk7XG4gIGxldCBzaGlwNUNvbCA9IE51bWJlcihzaGlwNURhdGEuY29sKTtcblxuICBwbGF5ZXIxLnBsYXllclBsYWNlU2hpcChzaGlwMSwgc2hpcDFSb3csIHNoaXAxQ29sLCBcImhvcml6b250YWxcIik7XG4gIHBsYXllcjEucGxheWVyUGxhY2VTaGlwKHNoaXAyLCBzaGlwMlJvdywgc2hpcDJDb2wsIFwiaG9yaXpvbnRhbFwiKTtcbiAgcGxheWVyMS5wbGF5ZXJQbGFjZVNoaXAoc2hpcDMsIHNoaXAzUm93LCBzaGlwM0NvbCwgXCJob3Jpem9udGFsXCIpO1xuICBwbGF5ZXIxLnBsYXllclBsYWNlU2hpcChzaGlwNCwgc2hpcDRSb3csIHNoaXA0Q29sLCBcImhvcml6b250YWxcIik7XG4gIHBsYXllcjEucGxheWVyUGxhY2VTaGlwKHNoaXA1LCBzaGlwNVJvdywgc2hpcDVDb2wsIFwiaG9yaXpvbnRhbFwiKTtcblxuICAvLyBBZGQgc2hpcHMgdG8gcGxheWVyIDIgZ2FtZWJvYXJkIGFuZCB1c2UgIHJhbmRvbSBudW1iZXJzIGV2ZXJ5IHRpbWVcbiAgZnVuY3Rpb24gZ2V0UmFuZG9tT3JpZW50YXRpb24oKSB7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgPCAwLjUgPyBcImhvcml6b250YWxcIiA6IFwidmVydGljYWxcIjtcbiAgfVxuXG4gIHBsYXllcjIucGxheWVyUGxhY2VTaGlwKFxuICAgIHNoaXAxLFxuICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSxcbiAgICBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCksXG4gICAgZ2V0UmFuZG9tT3JpZW50YXRpb24oKVxuICApO1xuICBwbGF5ZXIyLnBsYXllclBsYWNlU2hpcChcbiAgICBzaGlwMixcbiAgICBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCksXG4gICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApLFxuICAgIGdldFJhbmRvbU9yaWVudGF0aW9uKClcbiAgKTtcbiAgcGxheWVyMi5wbGF5ZXJQbGFjZVNoaXAoXG4gICAgc2hpcDMsXG4gICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApLFxuICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSxcbiAgICBnZXRSYW5kb21PcmllbnRhdGlvbigpXG4gICk7XG4gIHBsYXllcjIucGxheWVyUGxhY2VTaGlwKFxuICAgIHNoaXA0LFxuICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSxcbiAgICBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCksXG4gICAgZ2V0UmFuZG9tT3JpZW50YXRpb24oKVxuICApO1xuICBwbGF5ZXIyLnBsYXllclBsYWNlU2hpcChcbiAgICBzaGlwNSxcbiAgICBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCksXG4gICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApLFxuICAgIGdldFJhbmRvbU9yaWVudGF0aW9uKClcbiAgKTtcblxuICAvLyBSZW5kZXIgZ2FtZSBib2FyZHNcbiAgcmVuZGVyUGxheWVyMUdhbWVCb2FyZChwbGF5ZXIxKTtcbiAgcmVuZGVyUGxheWVyMkdhbWVCb2FyZChwbGF5ZXIyKTtcbn1cblxuLy8gRnVuY3Rpb24gdG8gaGFuZGxlIHBsYXllcidzIHR1cm5cbmZ1bmN0aW9uIHBsYXllckhpdChwbGF5ZXIsIGVuZW15Qm9hcmQsIHJvdywgY29sKSB7XG4gIGxldCByZXN1bHQgPSBwbGF5ZXIuZmlyZVNob3Qocm93LCBjb2wsIGVuZW15Qm9hcmQpO1xuICByZW5kZXJQbGF5ZXIxR2FtZUJvYXJkKHBsYXllcjEpO1xuICByZW5kZXJQbGF5ZXIyR2FtZUJvYXJkKHBsYXllcjIpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBzdGFydEdhbWUoc2hpcHNEYXRhKSB7XG4gIC8vIEluaXRpYWxpemUgZ2FtZVxuICBkaXNwbGF5R2FtZSgpO1xuICBjb25zb2xlLmxvZyhcIkdhbWUgc3RhcnRlZFwiKTtcbiAgaW5pdChzaGlwc0RhdGEpO1xuICBsZXQgcGxheWVyMVR1cm4gPSB0cnVlO1xuICBsZXQgZ2FtZU92ZXIgPSBmYWxzZTtcblxuICAvLyBHZXQgdGhlIHBhcmVudCBlbGVtZW50cyBvZiB0aGUgZ2FtZSBib2FyZHNcbiAgY29uc3QgcGxheWVyMUJvYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwbGF5ZXItMS1ib2FyZFwiKTtcbiAgY29uc3QgcGxheWVyMkJvYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwbGF5ZXItMi1ib2FyZFwiKTtcblxuICAvLyBDb21wdXRlciB0dXJuXG4gIGZ1bmN0aW9uIGNvbXB1dGVyVHVybigpIHtcbiAgICBpZiAoIXBsYXllcjFUdXJuKSB7XG4gICAgICBsZXQgcmFuZG9tUm93ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApO1xuICAgICAgbGV0IHJhbmRvbUNvbCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKTtcbiAgICAgIGxldCByZXN1bHQgPSBwbGF5ZXJIaXQocGxheWVyMiwgcGxheWVyMS5nYW1lQm9hcmQsIHJhbmRvbVJvdywgcmFuZG9tQ29sKTtcbiAgICAgIHdoaWxlIChyZXN1bHQgPT09IGZhbHNlKSB7XG4gICAgICAgIHJhbmRvbVJvdyA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKTtcbiAgICAgICAgcmFuZG9tQ29sID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApO1xuICAgICAgICByZXN1bHQgPSBwbGF5ZXJIaXQocGxheWVyMiwgcGxheWVyMS5nYW1lQm9hcmQsIHJhbmRvbVJvdywgcmFuZG9tQ29sKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHBsYXllcjEuZ2FtZUJvYXJkLmFsbFNoaXBzU3VuaygpKSB7XG4gICAgICAgIGdhbWVPdmVyID0gdHJ1ZTtcbiAgICAgICAgY29uc29sZS5sb2coXCJDb21wdXRlciB3aW5zIVwiKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBsYXllcjFUdXJuID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBQbGF5ZXIgdHVyblxuICBmdW5jdGlvbiBwbGF5ZXJUdXJuKGV2ZW50KSB7XG4gICAgaWYgKHBsYXllcjFUdXJuICYmICFnYW1lT3Zlcikge1xuICAgICAgbGV0IHJvdyA9IHBhcnNlSW50KGV2ZW50LnRhcmdldC5kYXRhc2V0LnJvdyk7XG4gICAgICBsZXQgY29sID0gcGFyc2VJbnQoZXZlbnQudGFyZ2V0LmRhdGFzZXQuY29sKTtcbiAgICAgIGxldCByZXN1bHQgPSBwbGF5ZXJIaXQocGxheWVyMSwgcGxheWVyMi5nYW1lQm9hcmQsIHJvdywgY29sKTtcbiAgICAgIGlmIChyZXN1bHQgPT09IGZhbHNlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiSW52YWxpZCBtb3ZlISBUcnkgYWdhaW4uXCIpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAocGxheWVyMi5nYW1lQm9hcmQuYWxsU2hpcHNTdW5rKCkpIHtcbiAgICAgICAgZ2FtZU92ZXIgPSB0cnVlO1xuICAgICAgICBjb25zb2xlLmxvZyhcIlBsYXllciAxIHdpbnMhXCIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGxheWVyMVR1cm4gPSBmYWxzZTtcbiAgICAgICAgc2V0VGltZW91dChjb21wdXRlclR1cm4sIDUwMCk7IC8vIERlbGF5IGNvbXB1dGVyIHR1cm4gZm9yIGJldHRlciBVWFxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIEF0dGFjaCBldmVudCBsaXN0ZW5lciB0byBwbGF5ZXIgMidzIGJvYXJkIGZvciBwbGF5ZXIgMSdzIHR1cm5cbiAgaWYgKHBsYXllcjJCb2FyZCkge1xuICAgIHBsYXllcjJCb2FyZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgcGxheWVyVHVybik7XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5lcnJvcihcIlBsYXllciAyIGJvYXJkIG5vdCBmb3VuZFwiKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBzdGFydEdhbWU7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZ2FtZU1lbnUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5vcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZ2FtZU1lbnUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHN0YXJ0R2FtZSBmcm9tIFwiLi9nYW1lTW9kdWxlXCI7XG5pbXBvcnQgXCIuL3N0eWxlL2dhbWVNZW51LmNzc1wiO1xuaW1wb3J0IGJhY2tncm91bmQgZnJvbSBcIi4vaW1hZ2VzL2JhY2tncm91bmQuanBlZ1wiO1xuaW1wb3J0IHNoaXBJY29uIGZyb20gXCIuL2ltYWdlcy9zaGlwLWljb24ucG5nXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBnYW1lTWVudSgpIHtcbiAgLy8gYWRkIGJhY2tncm91bmQgaW1hZ2UgdG8gdGhlIGJvZHlcbiAgbGV0IGJhY2tncm91bmRJbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gIGJhY2tncm91bmRJbWFnZS5zcmMgPSBiYWNrZ3JvdW5kO1xuICBiYWNrZ3JvdW5kSW1hZ2Uuc3R5bGUud2lkdGggPSBcIjEwMCVcIjtcbiAgYmFja2dyb3VuZEltYWdlLnN0eWxlLmhlaWdodCA9IFwiMTAwdmhcIjtcbiAgYmFja2dyb3VuZEltYWdlLnN0eWxlLnBvc2l0aW9uID0gXCJmaXhlZFwiO1xuICBiYWNrZ3JvdW5kSW1hZ2Uuc3R5bGUudG9wID0gXCIwXCI7XG4gIGJhY2tncm91bmRJbWFnZS5zdHlsZS5sZWZ0ID0gXCIwXCI7XG4gIGJhY2tncm91bmRJbWFnZS5zdHlsZS56SW5kZXggPSBcIi0xXCI7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYmFja2dyb3VuZEltYWdlKTtcblxuICAvLyBhZGQgYSBidXR0b24gdG8gc3RhcnQgZ2FtZVxuICBsZXQgc3RhcnRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBzdGFydEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU3RhcnQgR2FtZVwiO1xuICBzdGFydEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGxldCBzaGlwRGF0YSA9IGV4dHJhY3RTaGlwRGF0YUZyb21HcmlkKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ3JpZFwiKSk7XG4gICAgY29uc29sZS5sb2coc2hpcERhdGEpO1xuICAgIGRvY3VtZW50LmJvZHkuaW5uZXJIVE1MID0gXCJcIjtcblxuICAgIHN0YXJ0R2FtZShzaGlwRGF0YSk7XG4gICAgLy8gcmVtb3ZlIHRoZSBidXR0b25cbiAgICBzdGFydEJ1dHRvbi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0YXJ0QnV0dG9uKTtcbiAgfSk7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc3RhcnRCdXR0b24pO1xuXG4gIC8vIGNyZWF0ZSBhIGRpdiBlbGVtZW50XG4gIGxldCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBkaXYuaWQgPSBcImdhbWUtbWVudS1jb250YWluZXJcIjtcblxuICAvLyBzdHlsZSB0aGUgZGl2XG4gIGRpdi5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gIGRpdi5zdHlsZS5qdXN0aWZ5Q29udGVudCA9IFwiY2VudGVyXCI7XG4gIGRpdi5zdHlsZS5hbGlnbkl0ZW1zID0gXCJjZW50ZXJcIjtcblxuICAvLyBtYWtlIGJhdHRsZXNoaXAgdGl0bGVcbiAgbGV0IGRpdlRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgbGV0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgxXCIpO1xuICB0aXRsZS50ZXh0Q29udGVudCA9IFwiV2VsY29tZSB0byBCYXR0bGVzaGlwIVwiO1xuICB0aXRsZS5zdHlsZS5mb250U2l6ZSA9IFwiMzJweFwiO1xuICB0aXRsZS5zdHlsZS5mb250V2VpZ2h0ID0gXCJib2xkXCI7XG5cbiAgZGl2VGl0bGUuc3R5bGUud2lkdGggPSBcIjkwJVwiO1xuICAvLyBjZW50ZXIgZWxlbW50c1xuICBkaXZUaXRsZS5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gIGRpdlRpdGxlLnN0eWxlLmp1c3RpZnlDb250ZW50ID0gXCJjZW50ZXJcIjtcbiAgZGl2VGl0bGUuc3R5bGUuYWxpZ25JdGVtcyA9IFwiY2VudGVyXCI7XG4gIC8vIGxlYXYgdG9wIGFuZCBib3R0b20gYm9yZGVyXG4gIGRpdlRpdGxlLnN0eWxlLmJvcmRlclRvcCA9IFwiM3B4IHNvbGlkIGJsYWNrXCI7XG4gIGRpdlRpdGxlLnN0eWxlLmJvcmRlckJvdHRvbSA9IFwiM3B4IHNvbGlkIGJsYWNrXCI7XG4gIGRpdlRpdGxlLnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcbiAgZGl2VGl0bGUuc3R5bGUuanVzdGlmeUNvbnRlbnQgPSBcImNlbnRlclwiO1xuICBkaXZUaXRsZS5zdHlsZS5hbGlnbkl0ZW1zID0gXCJjZW50ZXJcIjtcblxuICAvLyBjcmVhdGUgYSBkaXYgZm9yIHRoZSB0aXRsZSBpY29uc1xuICBsZXQgdGl0bGVJY29uc0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIC8vIHN0eWxlIHRoZSB0aXRsZSBpY29ucyBkaXZcbiAgdGl0bGVJY29uc0Rpdi5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gIHRpdGxlSWNvbnNEaXYuc3R5bGUuYWxpZ25JdGVtcyA9IFwiY2VudGVyXCI7XG4gIC8vIGNyZWF0ZSB0aGUgc2hpcCBpY29uXG4gIGxldCBzaGlwSWNvbkltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gIHNoaXBJY29uSW1nLnNyYyA9IHNoaXBJY29uO1xuICBzaGlwSWNvbkltZy5zdHlsZS53aWR0aCA9IFwiNDBweFwiO1xuICBzaGlwSWNvbkltZy5zdHlsZS5oZWlnaHQgPSBcIjQwcHhcIjtcblxuICBsZXQgc2hpcEljb25JbWcyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgc2hpcEljb25JbWcyLnNyYyA9IHNoaXBJY29uO1xuICBzaGlwSWNvbkltZzIuc3R5bGUud2lkdGggPSBcIjQwcHhcIjtcbiAgc2hpcEljb25JbWcyLnN0eWxlLmhlaWdodCA9IFwiNDBweFwiO1xuICAvLyBhcHBlbmQgdGhlIHNoaXAgaWNvbiB0byB0aGUgdGl0bGUgaWNvbnMgZGl2XG4gIHRpdGxlSWNvbnNEaXYuYXBwZW5kQ2hpbGQoc2hpcEljb25JbWcpO1xuICAvLyBhcHBlbmQgdGhlIHRpdGxlIGljb25zIGRpdiB0byB0aGUgZGl2IHRpdGxlXG4gIGRpdlRpdGxlLmFwcGVuZENoaWxkKHNoaXBJY29uSW1nKTtcbiAgZGl2VGl0bGUuYXBwZW5kQ2hpbGQodGl0bGUpO1xuICBkaXZUaXRsZS5hcHBlbmRDaGlsZChzaGlwSWNvbkltZzIpO1xuXG4gIGRpdi5hcHBlbmRDaGlsZChkaXZUaXRsZSk7XG5cbiAgLy8gY3JlYXRlIGEgZGl2IGZvciB0aGUgZ3JpZCBjb250YWluZXJcbiAgbGV0IGdyaWRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBncmlkQ29udGFpbmVyLmlkID0gXCJncmlkLWNvbnRhaW5lclwiO1xuICAvLyBzdHlsZSB0aGUgZ3JpZCBjb250YWluZXJcblxuICBncmlkQ29udGFpbmVyLnN0eWxlLndpZHRoID0gXCI4MDBweFwiO1xuICBncmlkQ29udGFpbmVyLnN0eWxlLmhlaWdodCA9IFwiNTAwcHhcIjtcbiAgZ3JpZENvbnRhaW5lci5zdHlsZS5wYWRkaW5nID0gXCIyMHB4XCI7XG5cbiAgbGV0IGdyaWRUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGdyaWRUaXRsZS5zdHlsZS5mb250U2l6ZSA9IFwiMjRweFwiO1xuICBncmlkVGl0bGUuc3R5bGUuZm9udFdlaWdodCA9IFwiYm9sZFwiO1xuICBncmlkVGl0bGUuaWQgPSBcImdyaWQtdGl0bGVcIjtcbiAgZ3JpZFRpdGxlLnRleHRDb250ZW50ID0gXCJQbGFjZSB5b3VyIHNoaXBzXCI7XG4gIGdyaWRDb250YWluZXIuYXBwZW5kQ2hpbGQoZ3JpZFRpdGxlKTtcbiAgLy8gY3JlYXRlIGEgZGl2IGZvciB0aGUgZ3JpZFxuICBsZXQgZ3JpZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGdyaWQuaWQgPSBcImdyaWRcIjtcbiAgLy8gc3R5bGUgdGhlIGdyaWRcbiAgZ3JpZC5zdHlsZS5kaXNwbGF5ID0gXCJncmlkXCI7XG4gIGdyaWQuc3R5bGUuZ3JpZFRlbXBsYXRlQ29sdW1ucyA9IFwicmVwZWF0KDEwLCAxZnIpXCI7XG4gIGdyaWQuc3R5bGUuZ3JpZFRlbXBsYXRlUm93cyA9IFwicmVwZWF0KDEwLCAxZnIpXCI7XG4gIGdyaWQuc3R5bGUuYm9yZGVyID0gXCIxcHggc29saWQgYmxhY2tcIjtcbiAgZ3JpZC5zdHlsZS53aWR0aCA9IFwiNDAwcHhcIjtcbiAgZ3JpZC5zdHlsZS5oZWlnaHQgPSBcIjQwMHB4XCI7XG5cbiAgLy8gY3JlYXRlIHRoZSBjZWxscyBmb3IgdGhlIGdyaWRcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IDEwMDsgaSsrKSB7XG4gICAgbGV0IGNlbGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGNlbGwuc3R5bGUuYm9yZGVyID0gXCIxcHggc29saWQgYmxhY2tcIjtcbiAgICBjZWxsLnN0eWxlLndpZHRoID0gXCIzOHB4XCI7XG4gICAgY2VsbC5zdHlsZS5oZWlnaHQgPSBcIjM4cHhcIjtcblxuICAgIC8vIHB1dCByb3cgYW5kIGNvbGwgYXR0cmlidXRlIGZvciBlYWNoIGNlbGxcbiAgICBjZWxsLmRhdGFzZXQucm93ID0gTWF0aC5mbG9vcihpIC8gMTApO1xuICAgIGNlbGwuZGF0YXNldC5jb2wgPSBpICUgMTA7XG5cbiAgICAvLyBhZGQgZHJhZ292ZXIgZXZlbnQgdG8gYWxsb3cgZHJvcFxuICAgIGNlbGwuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdvdmVyXCIsIChlKSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSk7XG5cbiAgICAvLyBhZGQgZHJvcCBldmVudCB0byBoYW5kbGUgZHJvcHBlZCBzaGlwXG4gICAgY2VsbC5hZGRFdmVudExpc3RlbmVyKFwiZHJvcFwiLCAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgbGV0IHNoaXBJZCA9IGUuZGF0YVRyYW5zZmVyLmdldERhdGEoXCJ0ZXh0L3BsYWluXCIpO1xuICAgICAgbGV0IHNoaXAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChzaGlwSWQpO1xuICAgICAgZS50YXJnZXQuYXBwZW5kQ2hpbGQoc2hpcCk7XG4gICAgfSk7XG5cbiAgICBncmlkLmFwcGVuZENoaWxkKGNlbGwpO1xuICB9XG5cbiAgLy8gYXBwZW5kIHRoZSBncmlkIHRvIHRoZSBncmlkIGNvbnRhaW5lclxuICBncmlkQ29udGFpbmVyLmFwcGVuZENoaWxkKGdyaWQpO1xuXG4gIC8vIGNyZWF0ZSBhIGRpdiBmb3IgdGhlIHNoaXBzXG4gIGxldCBzaGlwc0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHNoaXBzRGl2LmlkID0gXCJzaGlwcy1kaXZcIjtcbiAgLy8gc3R5bGUgdGhlIHNoaXBzIGRpdlxuICBzaGlwc0Rpdi5zdHlsZS5tYXJnaW5MZWZ0ID0gXCIyMHB4XCI7XG5cbiAgLy8gY3JlYXRlIHRoZSBzaGlwc1xuICBmb3IgKGxldCBpID0gMDsgaSA8IDU7IGkrKykge1xuICAgIGxldCBzaGlwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBzaGlwLmNsYXNzTGlzdC5hZGQoXCJkcmFnLXNoaXBcIik7XG4gICAgc2hpcC5pZCA9IGBzaGlwLSR7aX1gO1xuICAgIHNoaXAuc3R5bGUud2lkdGggPSBgJHs0MCAqIChpICsgMSl9cHhgO1xuICAgIHNoaXAuc3R5bGUuaGVpZ2h0ID0gXCI0MHB4XCI7XG4gICAgc2hpcC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcImdyYXlcIjtcbiAgICBzaGlwLnN0eWxlLm1hcmdpbkJvdHRvbSA9IFwiMTBweFwiO1xuICAgIC8vIHNldCBkcmFnZ2FibGUgdG8gdHJ1ZVxuICAgIHNoaXAuZHJhZ2dhYmxlID0gdHJ1ZTtcbiAgICAvLyBhZGQgZHJhZ3N0YXJ0IGV2ZW50XG4gICAgc2hpcC5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ3N0YXJ0XCIsIChlKSA9PiB7XG4gICAgICBlLmRhdGFUcmFuc2Zlci5zZXREYXRhKFwidGV4dC9wbGFpblwiLCBzaGlwLmlkKTtcbiAgICB9KTtcbiAgICBzaGlwc0Rpdi5hcHBlbmRDaGlsZChzaGlwKTtcbiAgfVxuXG4gIC8vIGFwcGVuZCB0aGUgc2hpcHMgZGl2IHRvIHRoZSBncmlkIGNvbnRhaW5lclxuICBncmlkQ29udGFpbmVyLmFwcGVuZENoaWxkKHNoaXBzRGl2KTtcblxuICAvLyBhcHBlbmQgdGhlIGdyaWQgY29udGFpbmVyIHRvIHRoZSBkaXZcbiAgZGl2LmFwcGVuZENoaWxkKGdyaWRDb250YWluZXIpO1xuXG4gIC8vIGFwcGVuZCB0aGUgc3RhcnQgYnV0dG9uIHRvIHRoZSBkaXZcbiAgZGl2LmFwcGVuZENoaWxkKHN0YXJ0QnV0dG9uKTtcblxuICAvLyBhcHBlbmQgdGhlIGRpdiB0byB0aGUgYm9keVxuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRpdik7XG59XG5cbmZ1bmN0aW9uIGV4dHJhY3RTaGlwRGF0YUZyb21HcmlkKGdyaWQpIHtcbiAgLy8gZ2V0IGFsbCB0aGUgY2VsbHMgaW4gZ3JpZFxuICBsZXQgY2VsbHMgPSBncmlkLmNoaWxkTm9kZXM7XG5cbiAgbGV0IHNoaXBEYXRhID0gW107XG4gIGNlbGxzLmZvckVhY2goKGNlbGwpID0+IHtcbiAgICBpZiAoY2VsbC5jaGlsZEVsZW1lbnRDb3VudCA+IDApIHtcbiAgICAgIC8vZ2V0IHRoZSBjaGlsZCBlbGVtZW50IG9mIHRoZSBjZWxsXG4gICAgICBsZXQgY2VsbFNoaXAgPSBjZWxsLmNoaWxkcmVuWzBdO1xuICAgICAgLy9nZXQgdGhlIHdpZHRoIGZyb20gdGhlIHNoaXAgaWQgKyAxXG4gICAgICBsZXQgc2hpcFdpZHRoID0gcGFyc2VJbnQoY2VsbFNoaXAuaWQuc3BsaXQoXCItXCIpWzFdKSArIDE7XG5cbiAgICAgIGxldCBzaGlwID0ge1xuICAgICAgICByb3c6IGNlbGwuZGF0YXNldC5yb3csXG4gICAgICAgIGNvbDogY2VsbC5kYXRhc2V0LmNvbCxcbiAgICAgICAgd2lkdGg6IHNoaXBXaWR0aCxcbiAgICAgIH07XG4gICAgICBzaGlwRGF0YS5wdXNoKHNoaXApO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBzaGlwRGF0YTtcbn1cbmV4cG9ydCBkZWZhdWx0IGdhbWVNZW51O1xuIiwiaW1wb3J0IGdhbWVNZW51IGZyb20gXCIuL2dhbWVNZW51XCI7XG5cbmdhbWVNZW51KCk7XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwidGVzdCIsInJlcGxhY2UiLCJwIiwibmMiLCJjb25zdHJ1Y3RvciIsImJvYXJkIiwiQXJyYXkiLCJmaWxsIiwibWlzc2VkQXR0YWNrcyIsInNoaXBzIiwicGxhY2VTaGlwIiwic2hpcCIsInJvdyIsImNvbCIsIm9yaWVudGF0aW9uIiwicmVjZWl2ZUF0dGFjayIsImhpdCIsImFsbFNoaXBzU3VuayIsImV2ZXJ5IiwiaXNTdW5rIiwibmFtZSIsImdhbWVCb2FyZCIsImZpcmVTaG90IiwiZW5lbXlHYW1lQm9hcmQiLCJwbGF5ZXJQbGFjZVNoaXAiLCJnZXRCb2FyZCIsImhpdHMiLCJyZW5kZXJQbGF5ZXIxR2FtZUJvYXJkIiwicGxheWVyIiwiZ2FtZUJvYXJkRWxlbWVudCIsImdldEVsZW1lbnRCeUlkIiwiaW5uZXJIVE1MIiwiY2VsbEVsZW1lbnQiLCJkYXRhc2V0IiwiY2xhc3NOYW1lIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVuZGVyUGxheWVyMkdhbWVCb2FyZCIsImxvY2FscyIsInBsYXllcjEiLCJwbGF5ZXIyIiwicGxheWVySGl0IiwiZW5lbXlCb2FyZCIsInNoaXBzRGF0YSIsImJvZHkiLCJUaXRsZSIsInRleHRDb250ZW50IiwiZ2FtZUNvbnRhaW5lciIsInBsYXllckJvYXJkMSIsInBsYXllckJvYXJkMiIsInBsYXllcjFUaXRsZSIsInBsYXllcjJUaXRsZSIsInBsYXllcjFCb2FyZCIsInBsYXllcjJCb2FyZCIsImRpc3BsYXlHYW1lIiwiY29uc29sZSIsImxvZyIsInNoaXAxRGF0YSIsInNoaXAyRGF0YSIsInNoaXAzRGF0YSIsInNoaXA0RGF0YSIsInNoaXA1RGF0YSIsInNoaXAxV2lkdGgiLCJ3aWR0aCIsInNoaXAyV2lkdGgiLCJzaGlwM1dpZHRoIiwic2hpcDRXaWR0aCIsInNoaXA1V2lkdGgiLCJzaGlwMSIsInNoaXAyIiwic2hpcDMiLCJzaGlwNCIsInNoaXA1Iiwic2hpcDFSb3ciLCJOdW1iZXIiLCJzaGlwMUNvbCIsInNoaXAyUm93Iiwic2hpcDJDb2wiLCJzaGlwM1JvdyIsInNoaXAzQ29sIiwic2hpcDRSb3ciLCJzaGlwNENvbCIsInNoaXA1Um93Iiwic2hpcDVDb2wiLCJnZXRSYW5kb21PcmllbnRhdGlvbiIsIk1hdGgiLCJyYW5kb20iLCJmbG9vciIsImluaXQiLCJwbGF5ZXIxVHVybiIsImdhbWVPdmVyIiwiY29tcHV0ZXJUdXJuIiwicmFuZG9tUm93IiwicmFuZG9tQ29sIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicGFyc2VJbnQiLCJzZXRUaW1lb3V0IiwiZXJyb3IiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJoZWlnaHQiLCJwb3NpdGlvbiIsInRvcCIsImxlZnQiLCJ6SW5kZXgiLCJzdGFydEJ1dHRvbiIsInNoaXBEYXRhIiwiZ3JpZCIsImNlbGxzIiwiY2hpbGROb2RlcyIsImZvckVhY2giLCJjZWxsIiwiY2hpbGRFbGVtZW50Q291bnQiLCJjZWxsU2hpcCIsImNoaWxkcmVuIiwic2hpcFdpZHRoIiwic3BsaXQiLCJleHRyYWN0U2hpcERhdGFGcm9tR3JpZCIsImRpdiIsImRpc3BsYXkiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiLCJkaXZUaXRsZSIsInRpdGxlIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwiYm9yZGVyVG9wIiwiYm9yZGVyQm90dG9tIiwidGl0bGVJY29uc0RpdiIsInNoaXBJY29uSW1nIiwic2hpcEljb25JbWcyIiwiZ3JpZENvbnRhaW5lciIsInBhZGRpbmciLCJncmlkVGl0bGUiLCJncmlkVGVtcGxhdGVDb2x1bW5zIiwiZ3JpZFRlbXBsYXRlUm93cyIsImJvcmRlciIsInByZXZlbnREZWZhdWx0Iiwic2hpcElkIiwiZGF0YVRyYW5zZmVyIiwiZ2V0RGF0YSIsInNoaXBzRGl2IiwibWFyZ2luTGVmdCIsImJhY2tncm91bmRDb2xvciIsIm1hcmdpbkJvdHRvbSIsImRyYWdnYWJsZSIsInNldERhdGEiXSwic291cmNlUm9vdCI6IiJ9