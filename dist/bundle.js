(()=>{"use strict";var e={74:(e,n,t)=>{t.d(n,{A:()=>l});var r=t(354),a=t.n(r),o=t(314),i=t.n(o)()(a());i.push([e.id,"body {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#game-menu-container {\n  margin-top: 100px;\n  padding: 20px;\n  border: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #f1f1f1;\n  gap: 20px;\n}\n\n#grid-container {\n  padding: 10px;\n}\n","",{version:3,sources:["webpack://./src/style/gameMenu.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,uBAAuB;EACvB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,yBAAyB;EACzB,SAAS;AACX;;AAEA;EACE,aAAa;AACf",sourcesContent:["body {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#game-menu-container {\n  margin-top: 100px;\n  padding: 20px;\n  border: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #f1f1f1;\n  gap: 20px;\n}\n\n#grid-container {\n  padding: 10px;\n}\n"],sourceRoot:""}]);const l=i},106:(e,n,t)=>{t.d(n,{A:()=>l});var r=t(354),a=t.n(r),o=t(314),i=t.n(o)()(a());i.push([e.id,"/* style.css */\n\n/* Add your CSS styles here */\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #f2f2f2;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\nh1 {\n  color: #333;\n  text-align: center;\n}\n\n.container {\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n/* Add more styles as needed */\n#game-board {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  grid-gap: 10px;\n  justify-items: center;\n  align-items: center;\n}\n\n.player-board {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  gap: 1px;\n}\n\n.cells {\n  border: 1px solid;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 30px;\n  font-weight: bold;\n  background-color: #dad2d2;\n}\n.cells:hover {\n  background-color: #665e5e;\n}\n.ship {\n  background-color: #3e4640; /* Grey for ships */\n}\n\n.hit {\n  background-color: #f00; /* Red for hits */\n}\n\n.miss {\n  background-color: #0f0; /* Green for misses */\n}\n\n.empty {\n  background-color: #dad2d2; /* White for empty cells */\n}\n","",{version:3,sources:["webpack://./src/style/style.css"],names:[],mappings:"AAAA,cAAc;;AAEd,6BAA6B;AAC7B;EACE,8BAA8B;EAC9B,yBAAyB;EACzB,SAAS;EACT,UAAU;EACV,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,cAAc;EACd,aAAa;AACf;;AAEA,8BAA8B;AAC9B;EACE,aAAa;EACb,qCAAqC;EACrC,kCAAkC;EAClC,cAAc;EACd,qBAAqB;EACrB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,QAAQ;AACV;;AAEA;EACE,iBAAiB;EACjB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;EACf,iBAAiB;EACjB,yBAAyB;AAC3B;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,yBAAyB,EAAE,mBAAmB;AAChD;;AAEA;EACE,sBAAsB,EAAE,iBAAiB;AAC3C;;AAEA;EACE,sBAAsB,EAAE,qBAAqB;AAC/C;;AAEA;EACE,yBAAyB,EAAE,0BAA0B;AACvD",sourcesContent:["/* style.css */\n\n/* Add your CSS styles here */\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #f2f2f2;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\nh1 {\n  color: #333;\n  text-align: center;\n}\n\n.container {\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n/* Add more styles as needed */\n#game-board {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  grid-gap: 10px;\n  justify-items: center;\n  align-items: center;\n}\n\n.player-board {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  gap: 1px;\n}\n\n.cells {\n  border: 1px solid;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 30px;\n  font-weight: bold;\n  background-color: #dad2d2;\n}\n.cells:hover {\n  background-color: #665e5e;\n}\n.ship {\n  background-color: #3e4640; /* Grey for ships */\n}\n\n.hit {\n  background-color: #f00; /* Red for hits */\n}\n\n.miss {\n  background-color: #0f0; /* Green for misses */\n}\n\n.empty {\n  background-color: #dad2d2; /* White for empty cells */\n}\n"],sourceRoot:""}]);const l=i},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);r&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),n.push(c))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],l=0;l<e.length;l++){var s=e[l],d=r.base?s[0]+r.base:s[0],c=o[d]||0,A="".concat(d," ").concat(c);o[d]=c+1;var p=t(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=a(u,r);r.byIndex=l,n.splice(l,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var l=t(o[i]);n[l].references--}for(var s=r(e,a),d=0;d<o.length;d++){var c=t(o[d]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}o=s}}},659:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;const r=class{constructor(){this.board=new Array(10).fill(null).map((()=>new Array(10).fill(null))),this.missedAttacks=[],this.ships=[]}placeShip(e,n,t,r){if(n<0||n>9||t<0||t>9)throw new Error("Invalid row or column");if("vertical"===r){if(n+(e.length-1)>9)return!1;for(let r=0;r<e.length;r++)if(this.board[n+r][t])return!1;for(let r=0;r<e.length;r++)this.board[n+r][t]=e}else{if(t+(e.length-1)>9)return!1;for(let r=0;r<e.length;r++)if(this.board[n][t+r])return!1;for(let r=0;r<e.length;r++)this.board[n][t+r]=e}return this.ships.push(e),!0}receiveAttack(e,n){if(e<0||e>9||n<0||n>9)throw new Error("Invalid row or column");return null===this.board[e][n]?(this.missedAttacks.push([e,n]),this.board[e][n]="miss",!0):"hit"!==this.board[e][n]&&("miss"!==this.board[e][n]&&(this.board[e][n].hit(),this.board[e][n]="hit",!0))}allShipsSunk(){return this.ships.every((e=>e.isSunk()))}},a=class{constructor(e){this.name=e,this.gameBoard=new r}fireShot(e,n,t){return t.receiveAttack(e,n)}playerPlaceShip(e,n,t,r){this.gameBoard.placeShip(e,n,t,r)}getBoard(){return this.gameBoard.board}},o=class{constructor(e){this.length=e,this.hits=0}hit(){this.isSunk()||this.hits++}isSunk(){return this.hits===this.length}};var i=t(72),l=t.n(i),s=t(825),d=t.n(s),c=t(659),A=t.n(c),p=t(56),u=t.n(p),m=t(540),h=t.n(m),f=t(113),y=t.n(f),g=t(106),E={};function C(e){const n=document.getElementById("player-1-board");n.innerHTML="";let t=e.getBoard();for(let e=0;e<10;e++)for(let r=0;r<10;r++){const a=document.createElement("div");a.dataset.row=e,a.dataset.col=r,t[e][r]instanceof o?a.className="ship":"hit"===t[e][r]?a.className="hit":"miss"===t[e][r]?a.className="miss":a.className="empty",a.classList.add("cells"),a.classList.add("player-1-cells"),n.appendChild(a)}}function B(e){const n=document.getElementById("player-2-board");n.innerHTML="";let t=e.getBoard();for(let e=0;e<10;e++)for(let r=0;r<10;r++){const a=document.createElement("div");a.dataset.row=e,a.dataset.col=r,t[e][r]instanceof o||("hit"===t[e][r]?a.className="hit":"miss"===t[e][r]?a.className="miss":a.className="empty"),a.classList.add("cells"),a.classList.add("player-2-cells"),n.appendChild(a)}}E.styleTagTransform=y(),E.setAttributes=u(),E.insert=A().bind(null,"head"),E.domAPI=d(),E.insertStyleElement=h(),l()(g.A,E),g.A&&g.A.locals&&g.A.locals;const b=new a("Player 1"),v=new a("Player 2");function x(e,n,t,r){let a=e.fireShot(t,r,n);return C(b),B(v),a}const w=function(e){(function(){document.body.innerHTML="";let e=document.createElement("h1");e.textContent="Battleship",document.body.appendChild(e);let n=document.createElement("div");n.id="game-board",document.body.appendChild(n);let t=document.createElement("div");t.classList.add("player-board");let r=document.createElement("div");r.classList.add("player-board"),n.appendChild(t),n.appendChild(r);let a=document.createElement("h2");a.textContent="Player 1's Board";let o=document.createElement("h2");o.textContent="Player 2's Board",t.appendChild(a),r.appendChild(o);let i=document.createElement("div");i.id="player-1-board",i.classList.add("board"),t.appendChild(i);let l=document.createElement("div");l.id="player-2-board",l.classList.add("board"),r.appendChild(l)})(),console.log("Game started"),function(e){let n=e[0],t=e[1],r=e[2],a=e[3],i=e[4],l=n.width,s=t.width,d=r.width,c=a.width,A=i.width,p=new o(l),u=new o(s),m=new o(d),h=new o(c),f=new o(A),y=Number(n.row),g=Number(n.col),E=Number(t.row),x=Number(t.col),w=Number(r.row),M=Number(r.col),S=Number(a.row),k=Number(a.col),N=Number(i.row),L=Number(i.col);function j(){return Math.random()<.5?"horizontal":"vertical"}b.playerPlaceShip(p,y,g,"horizontal"),b.playerPlaceShip(u,E,x,"horizontal"),b.playerPlaceShip(m,w,M,"horizontal"),b.playerPlaceShip(h,S,k,"horizontal"),b.playerPlaceShip(f,N,L,"horizontal"),v.playerPlaceShip(p,Math.floor(10*Math.random()),Math.floor(10*Math.random()),j()),v.playerPlaceShip(u,Math.floor(10*Math.random()),Math.floor(10*Math.random()),j()),v.playerPlaceShip(m,Math.floor(10*Math.random()),Math.floor(10*Math.random()),j()),v.playerPlaceShip(h,Math.floor(10*Math.random()),Math.floor(10*Math.random()),j()),v.playerPlaceShip(f,Math.floor(10*Math.random()),Math.floor(10*Math.random()),j()),C(b),B(v)}(e);let n=!0,t=!1;document.getElementById("player-1-board");const r=document.getElementById("player-2-board");function a(){if(!n){let e=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),a=x(v,b.gameBoard,e,r);for(;!1===a;)e=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),a=x(v,b.gameBoard,e,r);b.gameBoard.allShipsSunk()?(t=!0,console.log("Computer wins!")):n=!0}}r?r.addEventListener("click",(function(e){if(n&&!t){let r=parseInt(e.target.dataset.row),o=parseInt(e.target.dataset.col);if(!1===x(b,v.gameBoard,r,o))return void console.log("Invalid move! Try again.");v.gameBoard.allShipsSunk()?(t=!0,console.log("Player 1 wins!")):(n=!1,setTimeout(a,500))}})):console.error("Player 2 board not found")};var M=t(74),S={};S.styleTagTransform=y(),S.setAttributes=u(),S.insert=A().bind(null,"head"),S.domAPI=d(),S.insertStyleElement=h(),l()(M.A,S),M.A&&M.A.locals&&M.A.locals;!function(){let e=document.createElement("button");e.textContent="Start Game",e.addEventListener("click",(()=>{let n=function(e){let n=document.getElementById("grid").childNodes,t=[];return n.forEach((e=>{if(e.childElementCount>0){let n=e.children[0],r=parseInt(n.id.split("-")[1])+1,a={row:e.dataset.row,col:e.dataset.col,width:r};t.push(a)}})),t}();console.log(n),document.body.innerHTML="",w(n),e.parentNode.removeChild(e)})),document.body.appendChild(e);let n=document.createElement("div");n.id="game-menu-container",n.style.display="flex",n.style.justifyContent="center",n.style.alignItems="center";let t=document.createElement("div");t.id="grid-container",t.style.display="flex",t.style.justifyContent="center",t.style.alignItems="center",t.style.border="1px solid black",t.style.width="600px",t.style.height="600px";let r=document.createElement("div");r.id="grid",r.style.display="grid",r.style.gridTemplateColumns="repeat(10, 1fr)",r.style.gridTemplateRows="repeat(10, 1fr)",r.style.border="1px solid black",r.style.width="400px",r.style.height="400px";for(let e=0;e<100;e++){let n=document.createElement("div");n.style.border="1px solid black",n.style.width="38px",n.style.height="38px",n.dataset.row=Math.floor(e/10),n.dataset.col=e%10,n.addEventListener("dragover",(e=>{e.preventDefault()})),n.addEventListener("drop",(e=>{e.preventDefault();let n=e.dataTransfer.getData("text/plain"),t=document.getElementById(n);e.target.appendChild(t)})),r.appendChild(n)}t.appendChild(r);let a=document.createElement("div");a.style.marginLeft="20px";for(let e=0;e<5;e++){let n=document.createElement("div");n.classList.add("drag-ship"),n.id=`ship-${e}`,n.style.width=40*(e+1)+"px",n.style.height="40px",n.style.backgroundColor="gray",n.style.marginBottom="10px",n.draggable=!0,n.addEventListener("dragstart",(e=>{e.dataTransfer.setData("text/plain",n.id)})),a.appendChild(n)}t.appendChild(a),n.appendChild(t),n.appendChild(e),document.body.appendChild(n)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,